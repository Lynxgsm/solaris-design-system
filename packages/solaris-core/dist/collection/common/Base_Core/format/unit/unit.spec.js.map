{"version":3,"file":"unit.spec.js","sourceRoot":"","sources":["../../../../../../../src/common/Base_Core/format/unit/unit.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,QAAQ,CAAA;AAEtC,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;EAE1B,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;IACrC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;EAC1C,CAAC,CAAC,CAAA;EAEF,EAAE,CAAC,2CAA2C,EAAE,GAAG,EAAE;IACjD,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;EAC7C,CAAC,CAAC,CAAA;EAEF,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;IAC9D,MAAM,CAAC,aAAa,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;EACjD,CAAC,CAAC,CAAA;EAEF,EAAE,CAAC,8DAA8D,EAAE,GAAG,EAAE;IACpE,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;EAC/C,CAAC,CAAC,CAAA;AAEN,CAAC,CAAC,CAAA","sourcesContent":["import { unitFormatter } from \"./unit\"\n\ndescribe('Unit Service', () => {\n\n    it('should returns 0px by default', () => {\n        expect(unitFormatter()).toEqual('0px')\n    })\n\n    it('should set unit to px if it is not passed', () => {\n        expect(unitFormatter(45)).toEqual('45px')\n    })\n\n    it('should returns concatenate with unit if unit is passed', () => {\n        expect(unitFormatter(45, '%')).toEqual('45%')\n    })\n\n    it('should returns directly the string value if string is passed', () => {\n        expect(unitFormatter('45%')).toEqual('45%')\n    })\n\n})"]}