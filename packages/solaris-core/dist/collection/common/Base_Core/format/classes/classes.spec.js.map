{"version":3,"file":"classes.spec.js","sourceRoot":"","sources":["../../../../../../../src/common/Base_Core/format/classes/classes.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;AAEnC,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;EAE7B,EAAE,CAAC,0DAA0D,EAAE,GAAG,EAAE;IAChE,MAAM,OAAO,GAAG,yBAAyB,CAAA;IAEzC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;EACrE,CAAC,CAAC,CAAA;EAEF,EAAE,CAAC,2EAA2E,EAAE,GAAG,EAAE;IACjF,MAAM,OAAO,GAAG,oBAAoB,CAAA;IAEpC,MAAM,CAAC,OAAO,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;EACxF,CAAC,CAAC,CAAA;AAEN,CAAC,CAAC,CAAA","sourcesContent":["import { classes } from \"./classes\"\n\ndescribe('Classes Service', () => {\n\n    it('should returns concatenation of classes separated by \" \"', () => {\n        const results = 'my classes concatenated'\n\n        expect(classes('my', 'classes', 'concatenated')).toEqual(results)\n    })\n\n    it('should concatenate if the value of the key is true while object is passed', () => {\n        const results = 'filtred class name'\n\n        expect(classes({filtred: true}, {ignored: false}, 'class', 'name')).toEqual(results)\n    })\n\n})"]}