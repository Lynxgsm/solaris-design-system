{"version":3,"file":"solaris-dropdown.js","sourceRoot":"","sources":["../../../src/components/solaris-dropdown/solaris-dropdown.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAClE,OAAO,EAAE,OAAO,EAAE,MAAM,+CAA+C,CAAC;AACxE,OAAO,EAAE,aAAa,EAAE,MAAM,yCAAyC,CAAC;AAQxE,MAAM,OAAO,eAAe;;;;;;uBAKU,WAAW;yBACJ,MAAM;;iBAGvB,IAAI;;EAE9B,MAAM;IACJ,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAM;IACJ,OAAO,CACL,oBAAc,IAAI,EAAC,OAAO,EAAC,KAAK,EAAC,kBAAkB;MACjD,cAAQ,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAC,iBAAiB;QACnD,YAAM,IAAI,EAAC,QAAQ,GAAG,CACf;MACT,qBACE,IAAI,EAAC,QAAQ,EACb,KAAK,EAAE;UACL,SAAS,EAAE,aAAa,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,aAAa,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG;SACtF,EACD,KAAK,EAAE,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,YAAY,IAAI,CAAC,WAAW,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QAEjJ,YAAM,IAAI,EAAC,SAAS,GAAG,CACT;MAChB,qBACE,IAAI,EAAC,eAAe,EACpB,OAAO,EAAE,IAAI,CAAC,MAAM,EACpB,OAAO,EAAE,IAAI,CAAC,MAAM,EACpB,KAAK,EAAE,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,EAC9F,QAAQ,EAAE,CAAC,GACI,CACJ,CAChB,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Listen, Prop, State, h } from '@stencil/core';\nimport { classes } from '../../common/Base_Core/format/classes/classes';\nimport { unitFormatter } from '../../common/Base_Core/format/unit/unit';\nimport { ColorScheme, UnitString } from '../../components';\n\n@Component({\n  tag: 'solaris-dropdown',\n  styleUrl: 'solaris-dropdown.scss',\n  shadow: true,\n})\nexport class SolarisDropdown {\n  @Prop() button: Element;\n  @Prop() top?: UnitString;\n  @Prop() left?: UnitString;\n  @Prop() decorated?: boolean;\n  @Prop() colorScheme?: ColorScheme = 'supernova';\n  @Prop() arrowPosition?: 'left' | 'right' = 'left';\n  @Prop() backdrop?: boolean;\n\n  @State() close: boolean = true;\n  @Listen('click', { capture: true })\n  toggle() {\n    this.close = !this.close;\n  }\n\n  render() {\n    return (\n      <solaris-flex role=\"group\" class=\"dropdown-wrapper\">\n        <button onClick={this.toggle} class=\"dropdown-button\">\n          <slot name=\"button\" />\n        </button>\n        <solaris-block\n          role=\"dialog\"\n          style={{\n            transform: `translate(${unitFormatter(this.left)}, ${unitFormatter(this.top || 40)})`,\n          }}\n          class={classes('dropdown', this.decorated ? 'decorated' : '', this.arrowPosition, `dropdown-${this.colorScheme}`, `${this.close ? 'close' : ''}`)}\n        >\n          <slot name=\"content\" />\n        </solaris-block>\n        <solaris-block\n          role=\"complementary\"\n          onFocus={this.toggle}\n          onClick={this.toggle}\n          class={classes('backdrop', this.close ? 'close' : '', this.backdrop ? 'backdrop-visible' : '')}\n          tabIndex={0}\n        ></solaris-block>\n      </solaris-flex>\n    );\n  }\n}\n"]}